= content_tag_for :li, page, class: "list-group-item list-group-item-page #{'fadein scaleInv anim_5' unless params[:sorting]}" do
  %h3
    = link_to page.title, page.owner.nil? ? page_path(page) : page_user_path(current_user, page), target: '_blank'
    %small= page.marked_as || page.tagline

  - unless sortable_pages?
    %p= excerpt page.body

    .list-group-item-meta
      = autosizing_image_tag display_user_image_url(page.author), size: 28
      - if page.published?
        = page.edited? ? 'Edited' : 'Posted'
        it
        %span.text-primary
          = "#{time_ago_in_words page.created_at} ago"

        - if page.edited? && !page.edited_by_author?
          and edited
          %span.text-primary
            = time_ago_in_words page.updated_at
            ago
          by
          = link_to display_user_name(page.edited_by), page.edited_by
      - else
        Saved
        %span.text-primary= "#{time_ago_in_words page.created_at} ago"

    .list-group-item-actions
      - if page.trashed?
        = link_to fa_icon('trash-o', text: 'Delete Permanently'), admin_page_path(page.id), method: :delete, data: { :confirm => 'Are you sure?' }, class: 'btn btn-danger'
        .pull-right
          = link_to 'Restore Page', restore_admin_page_path(page.id), method: :patch, class: 'btn btn-primary'
      - else
        - if page.drafted?
          = link_to 'Publish Page', publish_admin_page_path(page.id), method: :patch, class: 'btn btn-primary'
        = link_to 'Edit', edit_admin_page_path(page.id), class: "btn btn-#{page.published? ? 'primary' : 'default'}"

        - if top_level_controller?(:group) && page.published?
          .btn-group
            = button_tag type: :button, class: 'btn btn-default dropdown-toggle', data: { toggle: 'dropdown'} do
              = page.marked_as.try(:titleize) || fa_icon('flag')
              %span.caret

            %ul.dropdown-menu{ role: 'menu' }
              %li.dropdown-header= 'Mark as'
              - Group::PAGE_NAMES.each do |type|
                - unless page.marked_as.to_s == type
                  %li= link_to type.titleize, send("mark_as_#{type}_admin_page_path", page.id), method: :patch

              - if page.marked?
                %li.divider
                %li= link_to 'Unmark', unmark_admin_page_path(page.id), method: :patch

        = link_to (page.published? ? 'View Page' : 'Preview'), page.owner.nil? ? page_path(page) : page_user_path(current_user, page), class: 'btn btn-default', target: '_blank'
        .pull-right
          = link_to fa_icon('trash-o', text: 'Trash'), trash_admin_page_path(page.id), method: :patch, class: 'btn btn-danger'